# EXAMPLE USAGE:  docker run --rm codewars/python-runner run -l python -c "print 1+1 "
#                 docker run --rm codewars/python-runner run -l python3 -c "print(1+1)"

# Pull base image.
FROM codewars/base-runner

# Install Additional Python libraries
RUN apt-get install -y python-pip python-numpy python-scipy python-pandas

# Install Python 3
RUN apt-get install -y python3-pip python3-numpy python3-scipy python3-pandas

# Install Packages
RUN pip install pymongo redis
RUN pip3 install pymongo redis

# Install TensorFlow for deep learning capabilities (CPU support only)
RUN pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.8.0rc0-cp27-none-linux_x86_64.whl
RUN pip3 install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl

# Install Scikit-learn
RUN pip install -U scikit-learn
RUN pip3 install -U scikit-learn

# Install Tornado
RUN pip install -U tornado
RUN pip3 install -U tornado

# Install Ably
RUN pip install -U ably
RUN pip3 install -U ably

# add the package json first to a tmp directory and build, copy over so that we dont rebuild every time
ADD package.json /tmp/package.json
RUN cd /tmp && npm install --production
RUN mkdir -p /runner && cp -a /tmp/node_modules /runner

# ADD cli-runner and install node deps
ADD . /runner

WORKDIR /runner

# Run the test suite to make sure this thing works

USER codewarrior
# Set environment variables

ENV USER codewarrior
ENV HOME /home/codewarrior
RUN mocha -t 5000 test/runners/python_spec.js

#timeout is a fallback in case an error with node
#prevents it from exiting properly
ENTRYPOINT ["timeout", "15", "node"]
